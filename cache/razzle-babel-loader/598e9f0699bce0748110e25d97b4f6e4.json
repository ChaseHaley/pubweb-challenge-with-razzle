{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\pubweb-challenge-razzle\\\\challenge-with-razzle\\\\src\\\\server.js\";\nvar __jsx = React.createElement;\nimport App from \"./App\";\nimport React from \"react\";\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\"; // Import the StyledComponents SSR util\n\nimport { ServerStyleSheet } from \"styled-components\";\nimport { StaticRouter } from \"react-router-dom\";\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  // Create the server side style sheet\n  const sheet = new ServerStyleSheet(); // When the app is rendered collect the styles that are used inside it\n  // const markup = renderToString(sheet.collectStyles(<App />));\n  // Generate all the style tags so they can be rendered into the page\n\n  const markup = renderToString(sheet.collectStyles(__jsx(StaticRouter, {\n    location: req.url,\n    context: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }))));\n  const styleTags = sheet.getStyleTags();\n  const html = // prettier-ignore\n  `<!doctype html>\n  <html lang=\"\">\n  <head>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charSet='utf-8' />\n      <title>Welcome to Razzle</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      ${cssLinksFromAssets(assets, 'client')}\n      <!-- Render the style tags gathered from the components into the DOM -->\n      ${styleTags}\n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n  </body>\n</html>`;\n  return {\n    html\n  };\n};\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const {\n    html\n  } = renderApp(req, res);\n  res.send(html);\n});\nexport default server;","map":{"version":3,"sources":["E:/Projects/pubweb-challenge-razzle/challenge-with-razzle/src/server.js"],"names":["App","React","express","renderToString","ServerStyleSheet","StaticRouter","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","server","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","renderApp","req","res","sheet","markup","collectStyles","url","context","styleTags","getStyleTags","html","disable","use","static","RAZZLE_PUBLIC_DIR","get","send"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,MAAM,GAAGT,OAAO,EAAtB;;AAEA,MAAMU,kBAAkB,GAAG,CAACN,MAAD,EAASO,UAAT,KAAwB;AACjD,SAAOP,MAAM,CAACO,UAAD,CAAN,GAAqBP,MAAM,CAACO,UAAD,CAAN,CAAmBC,GAAnB,GAC1BR,MAAM,CAACO,UAAD,CAAN,CAAmBC,GAAnB,CAAuBC,GAAvB,CAA2BC,KAAK,IAC7B,gCAA+BA,KAAM,IADxC,EAEEC,IAFF,CAEO,EAFP,CAD0B,GAGb,EAHR,GAGa,EAHpB;AAID,CALD;;AAOA,MAAMC,sBAAsB,GAAG,CAACZ,MAAD,EAASO,UAAT,EAAqBM,KAAK,GAAG,EAA7B,KAAoC;AACjE,SAAOb,MAAM,CAACO,UAAD,CAAN,GAAqBP,MAAM,CAACO,UAAD,CAAN,CAAmBO,EAAnB,GAC1Bd,MAAM,CAACO,UAAD,CAAN,CAAmBO,EAAnB,CAAsBL,GAAtB,CAA0BC,KAAK,IAC5B,gBAAeA,KAAM,IAAGG,KAAM,YADjC,EAEEF,IAFF,CAEO,EAFP,CAD0B,GAGb,EAHR,GAGa,EAHpB;AAID,CALD;;AAOA,OAAO,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrC;AACA,QAAMC,KAAK,GAAG,IAAIpB,gBAAJ,EAAd,CAFqC,CAGrC;AACA;AACA;;AAEA,QAAMqB,MAAM,GAAGtB,cAAc,CAC3BqB,KAAK,CAACE,aAAN,CACE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEJ,GAAG,CAACK,GAA5B;AAAiC,IAAA,OAAO,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAD2B,CAA7B;AAQA,QAAMC,SAAS,GAAGL,KAAK,CAACM,YAAN,EAAlB;AAEA,QAAMC,IAAI,GACR;AACC;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQnB,kBAAkB,CAACN,MAAD,EAAS,QAAT,CAAmB;AAC7C;AACA,QAAQuB,SAAU;AAClB;AACA;AACA,uBAAuBJ,MAAO;AAC9B,QAAQP,sBAAsB,CAACZ,MAAD,EAAS,QAAT,EAAmB,oBAAnB,CAAyC;AACvE;AACA,QAjBE;AAmBA,SAAO;AAAEyB,IAAAA;AAAF,GAAP;AACD,CArCM;AAwCPpB,MAAM,CACHqB,OADH,CACW,cADX,EAEGC,GAFH,CAEO/B,OAAO,CAACgC,MAAR,CAAe1B,OAAO,CAACC,GAAR,CAAY0B,iBAA3B,CAFP,EAGGC,GAHH,CAGO,IAHP,EAGa,CAACd,GAAD,EAAMC,GAAN,KAAc;AACvB,QAAM;AAAEQ,IAAAA;AAAF,MAAWV,SAAS,CAACC,GAAD,EAAMC,GAAN,CAA1B;AACAA,EAAAA,GAAG,CAACc,IAAJ,CAASN,IAAT;AACD,CANH;AAQA,eAAepB,MAAf","sourcesContent":["import App from \"./App\";\nimport React from \"react\";\nimport express from \"express\";\nimport { renderToString } from \"react-dom/server\";\n// Import the StyledComponents SSR util\nimport { ServerStyleSheet } from \"styled-components\";\nimport { StaticRouter } from \"react-router-dom\";\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n    assets[entrypoint].css.map(asset =>\n      `<link rel=\"stylesheet\" href=\"${asset}\">`\n    ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n    assets[entrypoint].js.map(asset =>\n      `<script src=\"${asset}\"${extra}></script>`\n    ).join('') : '' : '';\n};\n\nexport const renderApp = (req, res) => {\n  // Create the server side style sheet\n  const sheet = new ServerStyleSheet();\n  // When the app is rendered collect the styles that are used inside it\n  // const markup = renderToString(sheet.collectStyles(<App />));\n  // Generate all the style tags so they can be rendered into the page\n\n  const markup = renderToString(\n    sheet.collectStyles(\n      <StaticRouter location={req.url} context={context}>\n        <App />\n      </StaticRouter>\n    )\n  );\n\n  const styleTags = sheet.getStyleTags();\n  \n  const html =\n    // prettier-ignore\n    `<!doctype html>\n  <html lang=\"\">\n  <head>\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta charSet='utf-8' />\n      <title>Welcome to Razzle</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n      ${cssLinksFromAssets(assets, 'client')}\n      <!-- Render the style tags gathered from the components into the DOM -->\n      ${styleTags}\n  </head>\n  <body>\n      <div id=\"root\">${markup}</div>\n      ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n  </body>\n</html>`;\n\n  return { html };\n};\n\n\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const { html } = renderApp(req, res);\n    res.send(html);\n  });\n\nexport default server;\n"]},"metadata":{},"sourceType":"module"}